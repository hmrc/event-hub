# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = event-hub

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "uk.gov.hmrc.eventhub.modules.EventHubModule"
# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.prod.Routes`.
# Default to Routes in the root package (and conf/prod.Routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  max-timers = 500
}

# Microservice specific config

auditing {
  enabled = true
}

mongodb {
  uri = "mongodb://mongo:27017/event-hub?replicaSet=devrs"
}

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }
  }
}

#Publisher configuration

publish.workItem.retryAfterHours = 1

# âˆ¼ 24 hour backoff configuration
subscription-defaults {
  elements = 60
  per = 3.seconds
  max-connections = 4
  min-back-off = 100.millis
  max-back-off = 10.minutes
  max-retries = 150
}

# Intentionaly empty as to not leak topics and subscribers in to all environemnts
topics {}

publisher-config {
  transaction-retries = 5
}

subscriber-stream-config {
  event-polling-interval = 10.millis
  subscriber-stream-backoff-config {
    min-back-off = 100.millis
    max-back-off = 10.minutes
  }
}

service-instances-config {
  timeout = 30.seconds
  heart-beat-interval = 3.seconds
}

# work item repository retries are disabled by default
queue {
  retryAfter = 24 hours
  numberOfRetries = 3
  retryFailedAfter = 1 hour
  deleteEventAfter = 7 days
}

# Disable default retries, we configure this ourselves on a per subscriber basis
pekko.http.host-connection-pool.max-retries = 0

pekko.http.client.user-agent-header = pekko-http/event-hub

event-hub {
  expire-after-seconds-ttl = 86400
}

subscriber-repos {
  expire-after-seconds-ttl = 86400
}